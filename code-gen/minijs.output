Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: ε

    5 function: _FUNCDEC _ID $@1 _LPAREN parameters _RPAREN body

    6 $@2: ε

    7 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters _ARROW body

    8 parameters: ε
    9           | parameter_list

   10 arrow_parameters: _LPAREN _RPAREN
   11                 | parameter
   12                 | _LPAREN parameter_list _RPAREN

   13 parameter_list: parameter
   14               | parameter_list _COMMA parameter

   15 parameter: _ID

   16 $@3: ε

   17 body: _LBRACKET variable_list $@3 statement_list _RBRACKET

   18 variable_list: ε
   19              | variable_list variable

   20 variable: _VARDEC _ID _SEMICOLON

   21 statement_list: ε
   22               | statement_list statement

   23 statement: compound_statement
   24          | assignment_statement
   25          | if_statement
   26          | return_statement

   27 compound_statement: _LBRACKET statement_list _RBRACKET

   28 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   29 num_exp: exp
   30        | num_exp _AROP exp

   31 exp: literal
   32    | _ID
   33    | function_call
   34    | _LPAREN num_exp _RPAREN

   35 literal: _NUMBER

   36 $@4: ε

   37 function_call: _ID $@4 _LPAREN arguments _RPAREN

   38 arguments: ε
   39          | argument_list

   40 argument_list: argument
   41              | argument_list _COMMA argument

   42 argument: num_exp

   43 if_statement: if_part
   44             | if_part _ELSE statement

   45 @5: ε

   46 $@6: ε

   47 if_part: _IF _LPAREN @5 rel_exp $@6 _RPAREN statement

   48 rel_exp: num_exp _RELOP num_exp

   49 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _VARDEC (258) 7 20
    _FUNCDEC (259) 5
    _ARROW (260) 7
    _COMMA (261) 14 41
    _IF (262) 47
    _ELSE (263) 44
    _RETURN (264) 49
    _ID <s> (265) 5 7 15 20 28 32 37
    _NUMBER <s> (266) 35
    _LPAREN (267) 5 10 12 34 37 47
    _RPAREN (268) 5 10 12 34 37 47
    _LBRACKET (269) 17 27
    _RBRACKET (270) 17 27
    _ASSIGN (271) 7 28
    _SEMICOLON (272) 20 28 49
    _AROP <i> (273) 30
    _RELOP <i> (274) 48
    ONLY_IF (275)


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    program (22)
        on left: 1
        on right: 0
    function_list (23)
        on left: 2 3
        on right: 1 3
    function (24)
        on left: 5 7
        on right: 2 3
    $@1 (25)
        on left: 4
        on right: 5
    $@2 (26)
        on left: 6
        on right: 7
    parameters (27)
        on left: 8 9
        on right: 5
    arrow_parameters (28)
        on left: 10 11 12
        on right: 7
    parameter_list (29)
        on left: 13 14
        on right: 9 12 14
    parameter (30)
        on left: 15
        on right: 11 13 14
    body (31)
        on left: 17
        on right: 5 7
    $@3 (32)
        on left: 16
        on right: 17
    variable_list (33)
        on left: 18 19
        on right: 17 19
    variable (34)
        on left: 20
        on right: 19
    statement_list (35)
        on left: 21 22
        on right: 17 22 27
    statement (36)
        on left: 23 24 25 26
        on right: 22 44 47
    compound_statement (37)
        on left: 27
        on right: 23
    assignment_statement (38)
        on left: 28
        on right: 24
    num_exp <i> (39)
        on left: 29 30
        on right: 28 30 34 42 48 49
    exp <i> (40)
        on left: 31 32 33 34
        on right: 29 30
    literal <i> (41)
        on left: 35
        on right: 31
    function_call <i> (42)
        on left: 37
        on right: 33
    $@4 (43)
        on left: 36
        on right: 37
    arguments <i> (44)
        on left: 38 39
        on right: 37
    argument_list <i> (45)
        on left: 40 41
        on right: 39 41
    argument <i> (46)
        on left: 42
        on right: 40 41
    if_statement (47)
        on left: 43 44
        on right: 25
    if_part <i> (48)
        on left: 47
        on right: 43 44
    @5 (49)
        on left: 45
        on right: 47
    $@6 (50)
        on left: 46
        on right: 47
    rel_exp <i> (51)
        on left: 48
        on right: 47
    return_statement (52)
        on left: 49
        on right: 26


State 0

    0 $accept: • program $end

    _VARDEC   shift, and go to state 1
    _FUNCDEC  shift, and go to state 2

    program        go to state 3
    function_list  go to state 4
    function       go to state 5


State 1

    7 function: _VARDEC • _ID _ASSIGN $@2 arrow_parameters _ARROW body

    _ID  shift, and go to state 6


State 2

    5 function: _FUNCDEC • _ID $@1 _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 7


State 3

    0 $accept: program • $end

    $end  shift, and go to state 8


State 4

    1 program: function_list •
    3 function_list: function_list • function

    _VARDEC   shift, and go to state 1
    _FUNCDEC  shift, and go to state 2

    $default  reduce using rule 1 (program)

    function  go to state 9


State 5

    2 function_list: function •

    $default  reduce using rule 2 (function_list)


State 6

    7 function: _VARDEC _ID • _ASSIGN $@2 arrow_parameters _ARROW body

    _ASSIGN  shift, and go to state 10


State 7

    5 function: _FUNCDEC _ID • $@1 _LPAREN parameters _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 11


State 8

    0 $accept: program $end •

    $default  accept


State 9

    3 function_list: function_list function •

    $default  reduce using rule 3 (function_list)


State 10

    7 function: _VARDEC _ID _ASSIGN • $@2 arrow_parameters _ARROW body

    $default  reduce using rule 6 ($@2)

    $@2  go to state 12


State 11

    5 function: _FUNCDEC _ID $@1 • _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 13


State 12

    7 function: _VARDEC _ID _ASSIGN $@2 • arrow_parameters _ARROW body

    _ID      shift, and go to state 14
    _LPAREN  shift, and go to state 15

    arrow_parameters  go to state 16
    parameter         go to state 17


State 13

    5 function: _FUNCDEC _ID $@1 _LPAREN • parameters _RPAREN body

    _ID  shift, and go to state 14

    $default  reduce using rule 8 (parameters)

    parameters      go to state 18
    parameter_list  go to state 19
    parameter       go to state 20


State 14

   15 parameter: _ID •

    $default  reduce using rule 15 (parameter)


State 15

   10 arrow_parameters: _LPAREN • _RPAREN
   12                 | _LPAREN • parameter_list _RPAREN

    _ID      shift, and go to state 14
    _RPAREN  shift, and go to state 21

    parameter_list  go to state 22
    parameter       go to state 20


State 16

    7 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters • _ARROW body

    _ARROW  shift, and go to state 23


State 17

   11 arrow_parameters: parameter •

    $default  reduce using rule 11 (arrow_parameters)


State 18

    5 function: _FUNCDEC _ID $@1 _LPAREN parameters • _RPAREN body

    _RPAREN  shift, and go to state 24


State 19

    9 parameters: parameter_list •
   14 parameter_list: parameter_list • _COMMA parameter

    _COMMA  shift, and go to state 25

    $default  reduce using rule 9 (parameters)


State 20

   13 parameter_list: parameter •

    $default  reduce using rule 13 (parameter_list)


State 21

   10 arrow_parameters: _LPAREN _RPAREN •

    $default  reduce using rule 10 (arrow_parameters)


State 22

   12 arrow_parameters: _LPAREN parameter_list • _RPAREN
   14 parameter_list: parameter_list • _COMMA parameter

    _COMMA   shift, and go to state 25
    _RPAREN  shift, and go to state 26


State 23

    7 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters _ARROW • body

    _LBRACKET  shift, and go to state 27

    body  go to state 28


State 24

    5 function: _FUNCDEC _ID $@1 _LPAREN parameters _RPAREN • body

    _LBRACKET  shift, and go to state 27

    body  go to state 29


State 25

   14 parameter_list: parameter_list _COMMA • parameter

    _ID  shift, and go to state 14

    parameter  go to state 30


State 26

   12 arrow_parameters: _LPAREN parameter_list _RPAREN •

    $default  reduce using rule 12 (arrow_parameters)


State 27

   17 body: _LBRACKET • variable_list $@3 statement_list _RBRACKET

    $default  reduce using rule 18 (variable_list)

    variable_list  go to state 31


State 28

    7 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters _ARROW body •

    $default  reduce using rule 7 (function)


State 29

    5 function: _FUNCDEC _ID $@1 _LPAREN parameters _RPAREN body •

    $default  reduce using rule 5 (function)


State 30

   14 parameter_list: parameter_list _COMMA parameter •

    $default  reduce using rule 14 (parameter_list)


State 31

   17 body: _LBRACKET variable_list • $@3 statement_list _RBRACKET
   19 variable_list: variable_list • variable

    _VARDEC  shift, and go to state 32

    $default  reduce using rule 16 ($@3)

    $@3       go to state 33
    variable  go to state 34


State 32

   20 variable: _VARDEC • _ID _SEMICOLON

    _ID  shift, and go to state 35


State 33

   17 body: _LBRACKET variable_list $@3 • statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 36


State 34

   19 variable_list: variable_list variable •

    $default  reduce using rule 19 (variable_list)


State 35

   20 variable: _VARDEC _ID • _SEMICOLON

    _SEMICOLON  shift, and go to state 37


State 36

   17 body: _LBRACKET variable_list $@3 statement_list • _RBRACKET
   22 statement_list: statement_list • statement

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41
    _RBRACKET  shift, and go to state 42

    statement             go to state 43
    compound_statement    go to state 44
    assignment_statement  go to state 45
    if_statement          go to state 46
    if_part               go to state 47
    return_statement      go to state 48


State 37

   20 variable: _VARDEC _ID _SEMICOLON •

    $default  reduce using rule 20 (variable)


State 38

   47 if_part: _IF • _LPAREN @5 rel_exp $@6 _RPAREN statement

    _LPAREN  shift, and go to state 49


State 39

   49 return_statement: _RETURN • num_exp _SEMICOLON

    _ID      shift, and go to state 50
    _NUMBER  shift, and go to state 51
    _LPAREN  shift, and go to state 52

    num_exp        go to state 53
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56


State 40

   28 assignment_statement: _ID • _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 57


State 41

   27 compound_statement: _LBRACKET • statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 58


State 42

   17 body: _LBRACKET variable_list $@3 statement_list _RBRACKET •

    $default  reduce using rule 17 (body)


State 43

   22 statement_list: statement_list statement •

    $default  reduce using rule 22 (statement_list)


State 44

   23 statement: compound_statement •

    $default  reduce using rule 23 (statement)


State 45

   24 statement: assignment_statement •

    $default  reduce using rule 24 (statement)


State 46

   25 statement: if_statement •

    $default  reduce using rule 25 (statement)


State 47

   43 if_statement: if_part •
   44             | if_part • _ELSE statement

    _ELSE  shift, and go to state 59

    $default  reduce using rule 43 (if_statement)


State 48

   26 statement: return_statement •

    $default  reduce using rule 26 (statement)


State 49

   47 if_part: _IF _LPAREN • @5 rel_exp $@6 _RPAREN statement

    $default  reduce using rule 45 (@5)

    @5  go to state 60


State 50

   32 exp: _ID •
   37 function_call: _ID • $@4 _LPAREN arguments _RPAREN

    _LPAREN   reduce using rule 36 ($@4)
    $default  reduce using rule 32 (exp)

    $@4  go to state 61


State 51

   35 literal: _NUMBER •

    $default  reduce using rule 35 (literal)


State 52

   34 exp: _LPAREN • num_exp _RPAREN

    _ID      shift, and go to state 50
    _NUMBER  shift, and go to state 51
    _LPAREN  shift, and go to state 52

    num_exp        go to state 62
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56


State 53

   30 num_exp: num_exp • _AROP exp
   49 return_statement: _RETURN num_exp • _SEMICOLON

    _SEMICOLON  shift, and go to state 63
    _AROP       shift, and go to state 64


State 54

   29 num_exp: exp •

    $default  reduce using rule 29 (num_exp)


State 55

   31 exp: literal •

    $default  reduce using rule 31 (exp)


State 56

   33 exp: function_call •

    $default  reduce using rule 33 (exp)


State 57

   28 assignment_statement: _ID _ASSIGN • num_exp _SEMICOLON

    _ID      shift, and go to state 50
    _NUMBER  shift, and go to state 51
    _LPAREN  shift, and go to state 52

    num_exp        go to state 65
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56


State 58

   22 statement_list: statement_list • statement
   27 compound_statement: _LBRACKET statement_list • _RBRACKET

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41
    _RBRACKET  shift, and go to state 66

    statement             go to state 43
    compound_statement    go to state 44
    assignment_statement  go to state 45
    if_statement          go to state 46
    if_part               go to state 47
    return_statement      go to state 48


State 59

   44 if_statement: if_part _ELSE • statement

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41

    statement             go to state 67
    compound_statement    go to state 44
    assignment_statement  go to state 45
    if_statement          go to state 46
    if_part               go to state 47
    return_statement      go to state 48


State 60

   47 if_part: _IF _LPAREN @5 • rel_exp $@6 _RPAREN statement

    _ID      shift, and go to state 50
    _NUMBER  shift, and go to state 51
    _LPAREN  shift, and go to state 52

    num_exp        go to state 68
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56
    rel_exp        go to state 69


State 61

   37 function_call: _ID $@4 • _LPAREN arguments _RPAREN

    _LPAREN  shift, and go to state 70


State 62

   30 num_exp: num_exp • _AROP exp
   34 exp: _LPAREN num_exp • _RPAREN

    _RPAREN  shift, and go to state 71
    _AROP    shift, and go to state 64


State 63

   49 return_statement: _RETURN num_exp _SEMICOLON •

    $default  reduce using rule 49 (return_statement)


State 64

   30 num_exp: num_exp _AROP • exp

    _ID      shift, and go to state 50
    _NUMBER  shift, and go to state 51
    _LPAREN  shift, and go to state 52

    exp            go to state 72
    literal        go to state 55
    function_call  go to state 56


State 65

   28 assignment_statement: _ID _ASSIGN num_exp • _SEMICOLON
   30 num_exp: num_exp • _AROP exp

    _SEMICOLON  shift, and go to state 73
    _AROP       shift, and go to state 64


State 66

   27 compound_statement: _LBRACKET statement_list _RBRACKET •

    $default  reduce using rule 27 (compound_statement)


State 67

   44 if_statement: if_part _ELSE statement •

    $default  reduce using rule 44 (if_statement)


State 68

   30 num_exp: num_exp • _AROP exp
   48 rel_exp: num_exp • _RELOP num_exp

    _AROP   shift, and go to state 64
    _RELOP  shift, and go to state 74


State 69

   47 if_part: _IF _LPAREN @5 rel_exp • $@6 _RPAREN statement

    $default  reduce using rule 46 ($@6)

    $@6  go to state 75


State 70

   37 function_call: _ID $@4 _LPAREN • arguments _RPAREN

    _ID      shift, and go to state 50
    _NUMBER  shift, and go to state 51
    _LPAREN  shift, and go to state 52

    $default  reduce using rule 38 (arguments)

    num_exp        go to state 76
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56
    arguments      go to state 77
    argument_list  go to state 78
    argument       go to state 79


State 71

   34 exp: _LPAREN num_exp _RPAREN •

    $default  reduce using rule 34 (exp)


State 72

   30 num_exp: num_exp _AROP exp •

    $default  reduce using rule 30 (num_exp)


State 73

   28 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON •

    $default  reduce using rule 28 (assignment_statement)


State 74

   48 rel_exp: num_exp _RELOP • num_exp

    _ID      shift, and go to state 50
    _NUMBER  shift, and go to state 51
    _LPAREN  shift, and go to state 52

    num_exp        go to state 80
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56


State 75

   47 if_part: _IF _LPAREN @5 rel_exp $@6 • _RPAREN statement

    _RPAREN  shift, and go to state 81


State 76

   30 num_exp: num_exp • _AROP exp
   42 argument: num_exp •

    _AROP  shift, and go to state 64

    $default  reduce using rule 42 (argument)


State 77

   37 function_call: _ID $@4 _LPAREN arguments • _RPAREN

    _RPAREN  shift, and go to state 82


State 78

   39 arguments: argument_list •
   41 argument_list: argument_list • _COMMA argument

    _COMMA  shift, and go to state 83

    $default  reduce using rule 39 (arguments)


State 79

   40 argument_list: argument •

    $default  reduce using rule 40 (argument_list)


State 80

   30 num_exp: num_exp • _AROP exp
   48 rel_exp: num_exp _RELOP num_exp •

    _AROP  shift, and go to state 64

    $default  reduce using rule 48 (rel_exp)


State 81

   47 if_part: _IF _LPAREN @5 rel_exp $@6 _RPAREN • statement

    _IF        shift, and go to state 38
    _RETURN    shift, and go to state 39
    _ID        shift, and go to state 40
    _LBRACKET  shift, and go to state 41

    statement             go to state 84
    compound_statement    go to state 44
    assignment_statement  go to state 45
    if_statement          go to state 46
    if_part               go to state 47
    return_statement      go to state 48


State 82

   37 function_call: _ID $@4 _LPAREN arguments _RPAREN •

    $default  reduce using rule 37 (function_call)


State 83

   41 argument_list: argument_list _COMMA • argument

    _ID      shift, and go to state 50
    _NUMBER  shift, and go to state 51
    _LPAREN  shift, and go to state 52

    num_exp        go to state 76
    exp            go to state 54
    literal        go to state 55
    function_call  go to state 56
    argument       go to state 85


State 84

   47 if_part: _IF _LPAREN @5 rel_exp $@6 _RPAREN statement •

    $default  reduce using rule 47 (if_part)


State 85

   41 argument_list: argument_list _COMMA argument •

    $default  reduce using rule 41 (argument_list)
