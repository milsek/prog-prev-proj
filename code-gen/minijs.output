Grammar

    0 $accept: program $end

    1 program: global_list function_list

    2 global_list: ε
    3            | global_list global_var

    4 global_var: _VARDEC _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: ε

    8 function: _FUNCDEC _ID $@1 _LPAREN parameters _RPAREN body

    9 $@2: ε

   10 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters _ARROW body

   11 $@3: ε

   12 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN body

   13 parameters: ε
   14           | parameter_list

   15 arrow_parameters: _LPAREN _RPAREN
   16                 | parameter
   17                 | _LPAREN parameter_list _RPAREN

   18 parameter_list: parameter
   19               | parameter_list _COMMA parameter

   20 parameter: _ID

   21 $@4: ε

   22 body: _LBRACKET variable_list $@4 statement_list _RBRACKET

   23 variable_list: ε
   24              | variable_list variable

   25 variable: _VARDEC _ID _SEMICOLON
   26         | _VARDEC _ID _ASSIGN num_exp _SEMICOLON

   27 statement_list: ε
   28               | statement_list statement

   29 statement: compound_statement
   30          | assignment_statement
   31          | if_statement
   32          | return_statement
   33          | while_statement
   34          | for_statement
   35          | break_statement
   36          | continue_statement
   37          | postincrement_statement
   38          | postdecrement_statement

   39 @5: ε

   40 $@6: ε

   41 while_statement: _WHILE @5 _LPAREN rel_exp _RPAREN $@6 statement

   42 @7: ε

   43 $@8: ε

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

   45 break_statement: _BREAK _SEMICOLON

   46 continue_statement: _CONTINUE _SEMICOLON

   47 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON

   48 postdecrement_statement: _ID _POSTDECREMENT _SEMICOLON

   49 compound_statement: _LBRACKET statement_list _RBRACKET

   50 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   51 num_exp: exp
   52        | num_exp _AROP exp

   53 exp: literal
   54    | _ID
   55    | function_call
   56    | _LPAREN num_exp _RPAREN
   57    | _LPAREN rel_exp _RPAREN _QMARK ternary_exp _COLON ternary_exp

   58 ternary_exp: _ID
   59            | literal

   60 literal: _NUMBER

   61 $@9: ε

   62 function_call: _ID $@9 _LPAREN arguments _RPAREN

   63 arguments: ε
   64          | argument_list

   65 argument_list: argument
   66              | argument_list _COMMA argument

   67 argument: num_exp

   68 if_statement: if_part
   69             | if_part _ELSE statement

   70 @10: ε

   71 $@11: ε

   72 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN statement

   73 rel_exp: num_exp _RELOP num_exp

   74 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _VARDEC <i> (258) 4 10 12 25 26 44
    _FUNCDEC (259) 8 12
    _ARROW (260) 10
    _COMMA (261) 19 66
    _WHILE (262) 41
    _FOR (263) 44
    _BREAK (264) 45
    _CONTINUE (265) 46
    _POSTINCREMENT (266) 44 47
    _POSTDECREMENT (267) 48
    _QMARK (268) 57
    _COLON (269) 57
    _IF (270) 72
    _ELSE (271) 69
    _RETURN (272) 74
    _ID <s> (273) 4 8 10 12 20 25 26 44 47 48 50 54 58 62
    _NUMBER <s> (274) 60
    _LPAREN (275) 8 12 15 17 41 44 56 57 62 72
    _RPAREN (276) 8 12 15 17 41 44 56 57 62 72
    _LBRACKET (277) 22 49
    _RBRACKET (278) 22 49
    _ASSIGN (279) 10 12 26 44 50
    _SEMICOLON (280) 4 25 26 44 45 46 47 48 50 74
    _AROP <i> (281) 52
    _RELOP <i> (282) 73
    ONLY_IF (283)


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    program (30)
        on left: 1
        on right: 0
    global_list (31)
        on left: 2 3
        on right: 1 3
    global_var (32)
        on left: 4
        on right: 3
    function_list (33)
        on left: 5 6
        on right: 1 6
    function (34)
        on left: 8 10 12
        on right: 5 6
    $@1 (35)
        on left: 7
        on right: 8
    $@2 (36)
        on left: 9
        on right: 10
    $@3 (37)
        on left: 11
        on right: 12
    parameters (38)
        on left: 13 14
        on right: 8 12
    arrow_parameters (39)
        on left: 15 16 17
        on right: 10
    parameter_list (40)
        on left: 18 19
        on right: 14 17 19
    parameter (41)
        on left: 20
        on right: 16 18 19
    body (42)
        on left: 22
        on right: 8 10 12
    $@4 (43)
        on left: 21
        on right: 22
    variable_list (44)
        on left: 23 24
        on right: 22 24
    variable (45)
        on left: 25 26
        on right: 24
    statement_list (46)
        on left: 27 28
        on right: 22 28 49
    statement (47)
        on left: 29 30 31 32 33 34 35 36 37 38
        on right: 28 41 44 69 72
    while_statement (48)
        on left: 41
        on right: 33
    @5 (49)
        on left: 39
        on right: 41
    $@6 (50)
        on left: 40
        on right: 41
    for_statement <i> (51)
        on left: 44
        on right: 34
    @7 (52)
        on left: 42
        on right: 44
    $@8 (53)
        on left: 43
        on right: 44
    break_statement (54)
        on left: 45
        on right: 35
    continue_statement (55)
        on left: 46
        on right: 36
    postincrement_statement (56)
        on left: 47
        on right: 37
    postdecrement_statement (57)
        on left: 48
        on right: 38
    compound_statement (58)
        on left: 49
        on right: 29
    assignment_statement (59)
        on left: 50
        on right: 30
    num_exp <i> (60)
        on left: 51 52
        on right: 26 50 52 56 67 73 74
    exp <i> (61)
        on left: 53 54 55 56 57
        on right: 51 52
    ternary_exp <i> (62)
        on left: 58 59
        on right: 57
    literal <i> (63)
        on left: 60
        on right: 44 53 59
    function_call <i> (64)
        on left: 62
        on right: 55
    $@9 (65)
        on left: 61
        on right: 62
    arguments <i> (66)
        on left: 63 64
        on right: 62
    argument_list <i> (67)
        on left: 65 66
        on right: 64 66
    argument <i> (68)
        on left: 67
        on right: 65 66
    if_statement (69)
        on left: 68 69
        on right: 31
    if_part <i> (70)
        on left: 72
        on right: 68 69
    @10 (71)
        on left: 70
        on right: 72
    $@11 (72)
        on left: 71
        on right: 72
    rel_exp <i> (73)
        on left: 73
        on right: 41 44 57 72
    return_statement (74)
        on left: 74
        on right: 32


State 0

    0 $accept: • program $end

    $default  reduce using rule 2 (global_list)

    program      go to state 1
    global_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: global_list • function_list
    3 global_list: global_list • global_var

    _VARDEC   shift, and go to state 4
    _FUNCDEC  shift, and go to state 5

    global_var     go to state 6
    function_list  go to state 7
    function       go to state 8


State 3

    0 $accept: program $end •

    $default  accept


State 4

    4 global_var: _VARDEC • _ID _SEMICOLON
   10 function: _VARDEC • _ID _ASSIGN $@2 arrow_parameters _ARROW body
   12         | _VARDEC • _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 9


State 5

    8 function: _FUNCDEC • _ID $@1 _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 10


State 6

    3 global_list: global_list global_var •

    $default  reduce using rule 3 (global_list)


State 7

    1 program: global_list function_list •
    6 function_list: function_list • function

    _VARDEC   shift, and go to state 11
    _FUNCDEC  shift, and go to state 5

    $default  reduce using rule 1 (program)

    function  go to state 12


State 8

    5 function_list: function •

    $default  reduce using rule 5 (function_list)


State 9

    4 global_var: _VARDEC _ID • _SEMICOLON
   10 function: _VARDEC _ID • _ASSIGN $@2 arrow_parameters _ARROW body
   12         | _VARDEC _ID • _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN body

    _ASSIGN     shift, and go to state 13
    _SEMICOLON  shift, and go to state 14


State 10

    8 function: _FUNCDEC _ID • $@1 _LPAREN parameters _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 15


State 11

   10 function: _VARDEC • _ID _ASSIGN $@2 arrow_parameters _ARROW body
   12         | _VARDEC • _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 16


State 12

    6 function_list: function_list function •

    $default  reduce using rule 6 (function_list)


State 13

   10 function: _VARDEC _ID _ASSIGN • $@2 arrow_parameters _ARROW body
   12         | _VARDEC _ID _ASSIGN • $@3 _FUNCDEC _LPAREN parameters _RPAREN body

    _FUNCDEC  reduce using rule 11 ($@3)
    $default  reduce using rule 9 ($@2)

    $@2  go to state 17
    $@3  go to state 18


State 14

    4 global_var: _VARDEC _ID _SEMICOLON •

    $default  reduce using rule 4 (global_var)


State 15

    8 function: _FUNCDEC _ID $@1 • _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 19


State 16

   10 function: _VARDEC _ID • _ASSIGN $@2 arrow_parameters _ARROW body
   12         | _VARDEC _ID • _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN body

    _ASSIGN  shift, and go to state 13


State 17

   10 function: _VARDEC _ID _ASSIGN $@2 • arrow_parameters _ARROW body

    _ID      shift, and go to state 20
    _LPAREN  shift, and go to state 21

    arrow_parameters  go to state 22
    parameter         go to state 23


State 18

   12 function: _VARDEC _ID _ASSIGN $@3 • _FUNCDEC _LPAREN parameters _RPAREN body

    _FUNCDEC  shift, and go to state 24


State 19

    8 function: _FUNCDEC _ID $@1 _LPAREN • parameters _RPAREN body

    _ID  shift, and go to state 20

    $default  reduce using rule 13 (parameters)

    parameters      go to state 25
    parameter_list  go to state 26
    parameter       go to state 27


State 20

   20 parameter: _ID •

    $default  reduce using rule 20 (parameter)


State 21

   15 arrow_parameters: _LPAREN • _RPAREN
   17                 | _LPAREN • parameter_list _RPAREN

    _ID      shift, and go to state 20
    _RPAREN  shift, and go to state 28

    parameter_list  go to state 29
    parameter       go to state 27


State 22

   10 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters • _ARROW body

    _ARROW  shift, and go to state 30


State 23

   16 arrow_parameters: parameter •

    $default  reduce using rule 16 (arrow_parameters)


State 24

   12 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC • _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 31


State 25

    8 function: _FUNCDEC _ID $@1 _LPAREN parameters • _RPAREN body

    _RPAREN  shift, and go to state 32


State 26

   14 parameters: parameter_list •
   19 parameter_list: parameter_list • _COMMA parameter

    _COMMA  shift, and go to state 33

    $default  reduce using rule 14 (parameters)


State 27

   18 parameter_list: parameter •

    $default  reduce using rule 18 (parameter_list)


State 28

   15 arrow_parameters: _LPAREN _RPAREN •

    $default  reduce using rule 15 (arrow_parameters)


State 29

   17 arrow_parameters: _LPAREN parameter_list • _RPAREN
   19 parameter_list: parameter_list • _COMMA parameter

    _COMMA   shift, and go to state 33
    _RPAREN  shift, and go to state 34


State 30

   10 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters _ARROW • body

    _LBRACKET  shift, and go to state 35

    body  go to state 36


State 31

   12 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC _LPAREN • parameters _RPAREN body

    _ID  shift, and go to state 20

    $default  reduce using rule 13 (parameters)

    parameters      go to state 37
    parameter_list  go to state 26
    parameter       go to state 27


State 32

    8 function: _FUNCDEC _ID $@1 _LPAREN parameters _RPAREN • body

    _LBRACKET  shift, and go to state 35

    body  go to state 38


State 33

   19 parameter_list: parameter_list _COMMA • parameter

    _ID  shift, and go to state 20

    parameter  go to state 39


State 34

   17 arrow_parameters: _LPAREN parameter_list _RPAREN •

    $default  reduce using rule 17 (arrow_parameters)


State 35

   22 body: _LBRACKET • variable_list $@4 statement_list _RBRACKET

    $default  reduce using rule 23 (variable_list)

    variable_list  go to state 40


State 36

   10 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters _ARROW body •

    $default  reduce using rule 10 (function)


State 37

   12 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters • _RPAREN body

    _RPAREN  shift, and go to state 41


State 38

    8 function: _FUNCDEC _ID $@1 _LPAREN parameters _RPAREN body •

    $default  reduce using rule 8 (function)


State 39

   19 parameter_list: parameter_list _COMMA parameter •

    $default  reduce using rule 19 (parameter_list)


State 40

   22 body: _LBRACKET variable_list • $@4 statement_list _RBRACKET
   24 variable_list: variable_list • variable

    _VARDEC  shift, and go to state 42

    $default  reduce using rule 21 ($@4)

    $@4       go to state 43
    variable  go to state 44


State 41

   12 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN • body

    _LBRACKET  shift, and go to state 35

    body  go to state 45


State 42

   25 variable: _VARDEC • _ID _SEMICOLON
   26         | _VARDEC • _ID _ASSIGN num_exp _SEMICOLON

    _ID  shift, and go to state 46


State 43

   22 body: _LBRACKET variable_list $@4 • statement_list _RBRACKET

    $default  reduce using rule 27 (statement_list)

    statement_list  go to state 47


State 44

   24 variable_list: variable_list variable •

    $default  reduce using rule 24 (variable_list)


State 45

   12 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN body •

    $default  reduce using rule 12 (function)


State 46

   25 variable: _VARDEC _ID • _SEMICOLON
   26         | _VARDEC _ID • _ASSIGN num_exp _SEMICOLON

    _ASSIGN     shift, and go to state 48
    _SEMICOLON  shift, and go to state 49


State 47

   22 body: _LBRACKET variable_list $@4 statement_list • _RBRACKET
   28 statement_list: statement_list • statement

    _WHILE     shift, and go to state 50
    _FOR       shift, and go to state 51
    _BREAK     shift, and go to state 52
    _CONTINUE  shift, and go to state 53
    _IF        shift, and go to state 54
    _RETURN    shift, and go to state 55
    _ID        shift, and go to state 56
    _LBRACKET  shift, and go to state 57
    _RBRACKET  shift, and go to state 58

    statement                go to state 59
    while_statement          go to state 60
    for_statement            go to state 61
    break_statement          go to state 62
    continue_statement       go to state 63
    postincrement_statement  go to state 64
    postdecrement_statement  go to state 65
    compound_statement       go to state 66
    assignment_statement     go to state 67
    if_statement             go to state 68
    if_part                  go to state 69
    return_statement         go to state 70


State 48

   26 variable: _VARDEC _ID _ASSIGN • num_exp _SEMICOLON

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    num_exp        go to state 74
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77


State 49

   25 variable: _VARDEC _ID _SEMICOLON •

    $default  reduce using rule 25 (variable)


State 50

   41 while_statement: _WHILE • @5 _LPAREN rel_exp _RPAREN $@6 statement

    $default  reduce using rule 39 (@5)

    @5  go to state 78


State 51

   44 for_statement: _FOR • _LPAREN _VARDEC _ID _ASSIGN literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

    _LPAREN  shift, and go to state 79


State 52

   45 break_statement: _BREAK • _SEMICOLON

    _SEMICOLON  shift, and go to state 80


State 53

   46 continue_statement: _CONTINUE • _SEMICOLON

    _SEMICOLON  shift, and go to state 81


State 54

   72 if_part: _IF • _LPAREN @10 rel_exp $@11 _RPAREN statement

    _LPAREN  shift, and go to state 82


State 55

   74 return_statement: _RETURN • num_exp _SEMICOLON

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    num_exp        go to state 83
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77


State 56

   47 postincrement_statement: _ID • _POSTINCREMENT _SEMICOLON
   48 postdecrement_statement: _ID • _POSTDECREMENT _SEMICOLON
   50 assignment_statement: _ID • _ASSIGN num_exp _SEMICOLON

    _POSTINCREMENT  shift, and go to state 84
    _POSTDECREMENT  shift, and go to state 85
    _ASSIGN         shift, and go to state 86


State 57

   49 compound_statement: _LBRACKET • statement_list _RBRACKET

    $default  reduce using rule 27 (statement_list)

    statement_list  go to state 87


State 58

   22 body: _LBRACKET variable_list $@4 statement_list _RBRACKET •

    $default  reduce using rule 22 (body)


State 59

   28 statement_list: statement_list statement •

    $default  reduce using rule 28 (statement_list)


State 60

   33 statement: while_statement •

    $default  reduce using rule 33 (statement)


State 61

   34 statement: for_statement •

    $default  reduce using rule 34 (statement)


State 62

   35 statement: break_statement •

    $default  reduce using rule 35 (statement)


State 63

   36 statement: continue_statement •

    $default  reduce using rule 36 (statement)


State 64

   37 statement: postincrement_statement •

    $default  reduce using rule 37 (statement)


State 65

   38 statement: postdecrement_statement •

    $default  reduce using rule 38 (statement)


State 66

   29 statement: compound_statement •

    $default  reduce using rule 29 (statement)


State 67

   30 statement: assignment_statement •

    $default  reduce using rule 30 (statement)


State 68

   31 statement: if_statement •

    $default  reduce using rule 31 (statement)


State 69

   68 if_statement: if_part •
   69             | if_part • _ELSE statement

    _ELSE  shift, and go to state 88

    $default  reduce using rule 68 (if_statement)


State 70

   32 statement: return_statement •

    $default  reduce using rule 32 (statement)


State 71

   54 exp: _ID •
   62 function_call: _ID • $@9 _LPAREN arguments _RPAREN

    _LPAREN   reduce using rule 61 ($@9)
    $default  reduce using rule 54 (exp)

    $@9  go to state 89


State 72

   60 literal: _NUMBER •

    $default  reduce using rule 60 (literal)


State 73

   56 exp: _LPAREN • num_exp _RPAREN
   57    | _LPAREN • rel_exp _RPAREN _QMARK ternary_exp _COLON ternary_exp

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    num_exp        go to state 90
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77
    rel_exp        go to state 91


State 74

   26 variable: _VARDEC _ID _ASSIGN num_exp • _SEMICOLON
   52 num_exp: num_exp • _AROP exp

    _SEMICOLON  shift, and go to state 92
    _AROP       shift, and go to state 93


State 75

   51 num_exp: exp •

    $default  reduce using rule 51 (num_exp)


State 76

   53 exp: literal •

    $default  reduce using rule 53 (exp)


State 77

   55 exp: function_call •

    $default  reduce using rule 55 (exp)


State 78

   41 while_statement: _WHILE @5 • _LPAREN rel_exp _RPAREN $@6 statement

    _LPAREN  shift, and go to state 94


State 79

   44 for_statement: _FOR _LPAREN • _VARDEC _ID _ASSIGN literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

    _VARDEC  shift, and go to state 95


State 80

   45 break_statement: _BREAK _SEMICOLON •

    $default  reduce using rule 45 (break_statement)


State 81

   46 continue_statement: _CONTINUE _SEMICOLON •

    $default  reduce using rule 46 (continue_statement)


State 82

   72 if_part: _IF _LPAREN • @10 rel_exp $@11 _RPAREN statement

    $default  reduce using rule 70 (@10)

    @10  go to state 96


State 83

   52 num_exp: num_exp • _AROP exp
   74 return_statement: _RETURN num_exp • _SEMICOLON

    _SEMICOLON  shift, and go to state 97
    _AROP       shift, and go to state 93


State 84

   47 postincrement_statement: _ID _POSTINCREMENT • _SEMICOLON

    _SEMICOLON  shift, and go to state 98


State 85

   48 postdecrement_statement: _ID _POSTDECREMENT • _SEMICOLON

    _SEMICOLON  shift, and go to state 99


State 86

   50 assignment_statement: _ID _ASSIGN • num_exp _SEMICOLON

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    num_exp        go to state 100
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77


State 87

   28 statement_list: statement_list • statement
   49 compound_statement: _LBRACKET statement_list • _RBRACKET

    _WHILE     shift, and go to state 50
    _FOR       shift, and go to state 51
    _BREAK     shift, and go to state 52
    _CONTINUE  shift, and go to state 53
    _IF        shift, and go to state 54
    _RETURN    shift, and go to state 55
    _ID        shift, and go to state 56
    _LBRACKET  shift, and go to state 57
    _RBRACKET  shift, and go to state 101

    statement                go to state 59
    while_statement          go to state 60
    for_statement            go to state 61
    break_statement          go to state 62
    continue_statement       go to state 63
    postincrement_statement  go to state 64
    postdecrement_statement  go to state 65
    compound_statement       go to state 66
    assignment_statement     go to state 67
    if_statement             go to state 68
    if_part                  go to state 69
    return_statement         go to state 70


State 88

   69 if_statement: if_part _ELSE • statement

    _WHILE     shift, and go to state 50
    _FOR       shift, and go to state 51
    _BREAK     shift, and go to state 52
    _CONTINUE  shift, and go to state 53
    _IF        shift, and go to state 54
    _RETURN    shift, and go to state 55
    _ID        shift, and go to state 56
    _LBRACKET  shift, and go to state 57

    statement                go to state 102
    while_statement          go to state 60
    for_statement            go to state 61
    break_statement          go to state 62
    continue_statement       go to state 63
    postincrement_statement  go to state 64
    postdecrement_statement  go to state 65
    compound_statement       go to state 66
    assignment_statement     go to state 67
    if_statement             go to state 68
    if_part                  go to state 69
    return_statement         go to state 70


State 89

   62 function_call: _ID $@9 • _LPAREN arguments _RPAREN

    _LPAREN  shift, and go to state 103


State 90

   52 num_exp: num_exp • _AROP exp
   56 exp: _LPAREN num_exp • _RPAREN
   73 rel_exp: num_exp • _RELOP num_exp

    _RPAREN  shift, and go to state 104
    _AROP    shift, and go to state 93
    _RELOP   shift, and go to state 105


State 91

   57 exp: _LPAREN rel_exp • _RPAREN _QMARK ternary_exp _COLON ternary_exp

    _RPAREN  shift, and go to state 106


State 92

   26 variable: _VARDEC _ID _ASSIGN num_exp _SEMICOLON •

    $default  reduce using rule 26 (variable)


State 93

   52 num_exp: num_exp _AROP • exp

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    exp            go to state 107
    literal        go to state 76
    function_call  go to state 77


State 94

   41 while_statement: _WHILE @5 _LPAREN • rel_exp _RPAREN $@6 statement

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    num_exp        go to state 108
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77
    rel_exp        go to state 109


State 95

   44 for_statement: _FOR _LPAREN _VARDEC • _ID _ASSIGN literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

    _ID  shift, and go to state 110


State 96

   72 if_part: _IF _LPAREN @10 • rel_exp $@11 _RPAREN statement

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    num_exp        go to state 108
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77
    rel_exp        go to state 111


State 97

   74 return_statement: _RETURN num_exp _SEMICOLON •

    $default  reduce using rule 74 (return_statement)


State 98

   47 postincrement_statement: _ID _POSTINCREMENT _SEMICOLON •

    $default  reduce using rule 47 (postincrement_statement)


State 99

   48 postdecrement_statement: _ID _POSTDECREMENT _SEMICOLON •

    $default  reduce using rule 48 (postdecrement_statement)


State 100

   50 assignment_statement: _ID _ASSIGN num_exp • _SEMICOLON
   52 num_exp: num_exp • _AROP exp

    _SEMICOLON  shift, and go to state 112
    _AROP       shift, and go to state 93


State 101

   49 compound_statement: _LBRACKET statement_list _RBRACKET •

    $default  reduce using rule 49 (compound_statement)


State 102

   69 if_statement: if_part _ELSE statement •

    $default  reduce using rule 69 (if_statement)


State 103

   62 function_call: _ID $@9 _LPAREN • arguments _RPAREN

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    $default  reduce using rule 63 (arguments)

    num_exp        go to state 113
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77
    arguments      go to state 114
    argument_list  go to state 115
    argument       go to state 116


State 104

   56 exp: _LPAREN num_exp _RPAREN •

    $default  reduce using rule 56 (exp)


State 105

   73 rel_exp: num_exp _RELOP • num_exp

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    num_exp        go to state 117
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77


State 106

   57 exp: _LPAREN rel_exp _RPAREN • _QMARK ternary_exp _COLON ternary_exp

    _QMARK  shift, and go to state 118


State 107

   52 num_exp: num_exp _AROP exp •

    $default  reduce using rule 52 (num_exp)


State 108

   52 num_exp: num_exp • _AROP exp
   73 rel_exp: num_exp • _RELOP num_exp

    _AROP   shift, and go to state 93
    _RELOP  shift, and go to state 105


State 109

   41 while_statement: _WHILE @5 _LPAREN rel_exp • _RPAREN $@6 statement

    _RPAREN  shift, and go to state 119


State 110

   44 for_statement: _FOR _LPAREN _VARDEC _ID • _ASSIGN literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

    _ASSIGN  shift, and go to state 120


State 111

   72 if_part: _IF _LPAREN @10 rel_exp • $@11 _RPAREN statement

    $default  reduce using rule 71 ($@11)

    $@11  go to state 121


State 112

   50 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON •

    $default  reduce using rule 50 (assignment_statement)


State 113

   52 num_exp: num_exp • _AROP exp
   67 argument: num_exp •

    _AROP  shift, and go to state 93

    $default  reduce using rule 67 (argument)


State 114

   62 function_call: _ID $@9 _LPAREN arguments • _RPAREN

    _RPAREN  shift, and go to state 122


State 115

   64 arguments: argument_list •
   66 argument_list: argument_list • _COMMA argument

    _COMMA  shift, and go to state 123

    $default  reduce using rule 64 (arguments)


State 116

   65 argument_list: argument •

    $default  reduce using rule 65 (argument_list)


State 117

   52 num_exp: num_exp • _AROP exp
   73 rel_exp: num_exp _RELOP num_exp •

    _AROP  shift, and go to state 93

    $default  reduce using rule 73 (rel_exp)


State 118

   57 exp: _LPAREN rel_exp _RPAREN _QMARK • ternary_exp _COLON ternary_exp

    _ID      shift, and go to state 124
    _NUMBER  shift, and go to state 72

    ternary_exp  go to state 125
    literal      go to state 126


State 119

   41 while_statement: _WHILE @5 _LPAREN rel_exp _RPAREN • $@6 statement

    $default  reduce using rule 40 ($@6)

    $@6  go to state 127


State 120

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN • literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

    _NUMBER  shift, and go to state 72

    literal  go to state 128


State 121

   72 if_part: _IF _LPAREN @10 rel_exp $@11 • _RPAREN statement

    _RPAREN  shift, and go to state 129


State 122

   62 function_call: _ID $@9 _LPAREN arguments _RPAREN •

    $default  reduce using rule 62 (function_call)


State 123

   66 argument_list: argument_list _COMMA • argument

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    num_exp        go to state 113
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77
    argument       go to state 130


State 124

   58 ternary_exp: _ID •

    $default  reduce using rule 58 (ternary_exp)


State 125

   57 exp: _LPAREN rel_exp _RPAREN _QMARK ternary_exp • _COLON ternary_exp

    _COLON  shift, and go to state 131


State 126

   59 ternary_exp: literal •

    $default  reduce using rule 59 (ternary_exp)


State 127

   41 while_statement: _WHILE @5 _LPAREN rel_exp _RPAREN $@6 • statement

    _WHILE     shift, and go to state 50
    _FOR       shift, and go to state 51
    _BREAK     shift, and go to state 52
    _CONTINUE  shift, and go to state 53
    _IF        shift, and go to state 54
    _RETURN    shift, and go to state 55
    _ID        shift, and go to state 56
    _LBRACKET  shift, and go to state 57

    statement                go to state 132
    while_statement          go to state 60
    for_statement            go to state 61
    break_statement          go to state 62
    continue_statement       go to state 63
    postincrement_statement  go to state 64
    postdecrement_statement  go to state 65
    compound_statement       go to state 66
    assignment_statement     go to state 67
    if_statement             go to state 68
    if_part                  go to state 69
    return_statement         go to state 70


State 128

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal • @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

    $default  reduce using rule 42 (@7)

    @7  go to state 133


State 129

   72 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN • statement

    _WHILE     shift, and go to state 50
    _FOR       shift, and go to state 51
    _BREAK     shift, and go to state 52
    _CONTINUE  shift, and go to state 53
    _IF        shift, and go to state 54
    _RETURN    shift, and go to state 55
    _ID        shift, and go to state 56
    _LBRACKET  shift, and go to state 57

    statement                go to state 134
    while_statement          go to state 60
    for_statement            go to state 61
    break_statement          go to state 62
    continue_statement       go to state 63
    postincrement_statement  go to state 64
    postdecrement_statement  go to state 65
    compound_statement       go to state 66
    assignment_statement     go to state 67
    if_statement             go to state 68
    if_part                  go to state 69
    return_statement         go to state 70


State 130

   66 argument_list: argument_list _COMMA argument •

    $default  reduce using rule 66 (argument_list)


State 131

   57 exp: _LPAREN rel_exp _RPAREN _QMARK ternary_exp _COLON • ternary_exp

    _ID      shift, and go to state 124
    _NUMBER  shift, and go to state 72

    ternary_exp  go to state 135
    literal      go to state 126


State 132

   41 while_statement: _WHILE @5 _LPAREN rel_exp _RPAREN $@6 statement •

    $default  reduce using rule 41 (while_statement)


State 133

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal @7 • _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

    _SEMICOLON  shift, and go to state 136


State 134

   72 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN statement •

    $default  reduce using rule 72 (if_part)


State 135

   57 exp: _LPAREN rel_exp _RPAREN _QMARK ternary_exp _COLON ternary_exp •

    $default  reduce using rule 57 (exp)


State 136

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal @7 _SEMICOLON • rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

    _ID      shift, and go to state 71
    _NUMBER  shift, and go to state 72
    _LPAREN  shift, and go to state 73

    num_exp        go to state 108
    exp            go to state 75
    literal        go to state 76
    function_call  go to state 77
    rel_exp        go to state 137


State 137

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal @7 _SEMICOLON rel_exp • $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

    $default  reduce using rule 43 ($@8)

    $@8  go to state 138


State 138

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal @7 _SEMICOLON rel_exp $@8 • _SEMICOLON _ID _POSTINCREMENT _RPAREN statement

    _SEMICOLON  shift, and go to state 139


State 139

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON • _ID _POSTINCREMENT _RPAREN statement

    _ID  shift, and go to state 140


State 140

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID • _POSTINCREMENT _RPAREN statement

    _POSTINCREMENT  shift, and go to state 141


State 141

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT • _RPAREN statement

    _RPAREN  shift, and go to state 142


State 142

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN • statement

    _WHILE     shift, and go to state 50
    _FOR       shift, and go to state 51
    _BREAK     shift, and go to state 52
    _CONTINUE  shift, and go to state 53
    _IF        shift, and go to state 54
    _RETURN    shift, and go to state 55
    _ID        shift, and go to state 56
    _LBRACKET  shift, and go to state 57

    statement                go to state 143
    while_statement          go to state 60
    for_statement            go to state 61
    break_statement          go to state 62
    continue_statement       go to state 63
    postincrement_statement  go to state 64
    postdecrement_statement  go to state 65
    compound_statement       go to state 66
    assignment_statement     go to state 67
    if_statement             go to state 68
    if_part                  go to state 69
    return_statement         go to state 70


State 143

   44 for_statement: _FOR _LPAREN _VARDEC _ID _ASSIGN literal @7 _SEMICOLON rel_exp $@8 _SEMICOLON _ID _POSTINCREMENT _RPAREN statement •

    $default  reduce using rule 44 (for_statement)
