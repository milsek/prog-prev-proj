Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: ε

    5 function: _FUNCDEC _ID $@1 _LPAREN parameters _RPAREN body

    6 $@2: ε

    7 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters _ARROW body

    8 $@3: ε

    9 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN body

   10 parameters: ε
   11           | parameter_list

   12 arrow_parameters: _LPAREN _RPAREN
   13                 | parameter
   14                 | _LPAREN parameter_list _RPAREN

   15 parameter_list: parameter
   16               | parameter_list _COMMA parameter

   17 parameter: _ID

   18 $@4: ε

   19 body: _LBRACKET variable_list $@4 statement_list _RBRACKET

   20 variable_list: ε
   21              | variable_list variable

   22 variable: _VARDEC _ID _SEMICOLON

   23 statement_list: ε
   24               | statement_list statement

   25 statement: compound_statement
   26          | assignment_statement
   27          | if_statement
   28          | return_statement

   29 compound_statement: _LBRACKET statement_list _RBRACKET

   30 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   31 num_exp: exp
   32        | num_exp _AROP exp

   33 exp: literal
   34    | _ID
   35    | function_call
   36    | _LPAREN num_exp _RPAREN

   37 literal: _NUMBER

   38 $@5: ε

   39 function_call: _ID $@5 _LPAREN arguments _RPAREN

   40 arguments: ε
   41          | argument_list

   42 argument_list: argument
   43              | argument_list _COMMA argument

   44 argument: num_exp

   45 if_statement: if_part
   46             | if_part _ELSE statement

   47 @6: ε

   48 $@7: ε

   49 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN statement

   50 rel_exp: num_exp _RELOP num_exp

   51 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _VARDEC <i> (258) 7 9 22
    _FUNCDEC (259) 5 9
    _ARROW (260) 7
    _COMMA (261) 16 43
    _IF (262) 49
    _ELSE (263) 46
    _RETURN (264) 51
    _ID <s> (265) 5 7 9 17 22 30 34 39
    _NUMBER <s> (266) 37
    _LPAREN (267) 5 9 12 14 36 39 49
    _RPAREN (268) 5 9 12 14 36 39 49
    _LBRACKET (269) 19 29
    _RBRACKET (270) 19 29
    _ASSIGN (271) 7 9 30
    _SEMICOLON (272) 22 30 51
    _AROP <i> (273) 32
    _RELOP <i> (274) 50
    ONLY_IF (275)


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    program (22)
        on left: 1
        on right: 0
    function_list (23)
        on left: 2 3
        on right: 1 3
    function (24)
        on left: 5 7 9
        on right: 2 3
    $@1 (25)
        on left: 4
        on right: 5
    $@2 (26)
        on left: 6
        on right: 7
    $@3 (27)
        on left: 8
        on right: 9
    parameters (28)
        on left: 10 11
        on right: 5 9
    arrow_parameters (29)
        on left: 12 13 14
        on right: 7
    parameter_list (30)
        on left: 15 16
        on right: 11 14 16
    parameter (31)
        on left: 17
        on right: 13 15 16
    body (32)
        on left: 19
        on right: 5 7 9
    $@4 (33)
        on left: 18
        on right: 19
    variable_list (34)
        on left: 20 21
        on right: 19 21
    variable (35)
        on left: 22
        on right: 21
    statement_list (36)
        on left: 23 24
        on right: 19 24 29
    statement (37)
        on left: 25 26 27 28
        on right: 24 46 49
    compound_statement (38)
        on left: 29
        on right: 25
    assignment_statement (39)
        on left: 30
        on right: 26
    num_exp <i> (40)
        on left: 31 32
        on right: 30 32 36 44 50 51
    exp <i> (41)
        on left: 33 34 35 36
        on right: 31 32
    literal <i> (42)
        on left: 37
        on right: 33
    function_call <i> (43)
        on left: 39
        on right: 35
    $@5 (44)
        on left: 38
        on right: 39
    arguments <i> (45)
        on left: 40 41
        on right: 39
    argument_list <i> (46)
        on left: 42 43
        on right: 41 43
    argument <i> (47)
        on left: 44
        on right: 42 43
    if_statement (48)
        on left: 45 46
        on right: 27
    if_part <i> (49)
        on left: 49
        on right: 45 46
    @6 (50)
        on left: 47
        on right: 49
    $@7 (51)
        on left: 48
        on right: 49
    rel_exp <i> (52)
        on left: 50
        on right: 49
    return_statement (53)
        on left: 51
        on right: 28


State 0

    0 $accept: • program $end

    _VARDEC   shift, and go to state 1
    _FUNCDEC  shift, and go to state 2

    program        go to state 3
    function_list  go to state 4
    function       go to state 5


State 1

    7 function: _VARDEC • _ID _ASSIGN $@2 arrow_parameters _ARROW body
    9         | _VARDEC • _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 6


State 2

    5 function: _FUNCDEC • _ID $@1 _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 7


State 3

    0 $accept: program • $end

    $end  shift, and go to state 8


State 4

    1 program: function_list •
    3 function_list: function_list • function

    _VARDEC   shift, and go to state 1
    _FUNCDEC  shift, and go to state 2

    $default  reduce using rule 1 (program)

    function  go to state 9


State 5

    2 function_list: function •

    $default  reduce using rule 2 (function_list)


State 6

    7 function: _VARDEC _ID • _ASSIGN $@2 arrow_parameters _ARROW body
    9         | _VARDEC _ID • _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN body

    _ASSIGN  shift, and go to state 10


State 7

    5 function: _FUNCDEC _ID • $@1 _LPAREN parameters _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 11


State 8

    0 $accept: program $end •

    $default  accept


State 9

    3 function_list: function_list function •

    $default  reduce using rule 3 (function_list)


State 10

    7 function: _VARDEC _ID _ASSIGN • $@2 arrow_parameters _ARROW body
    9         | _VARDEC _ID _ASSIGN • $@3 _FUNCDEC _LPAREN parameters _RPAREN body

    _FUNCDEC  reduce using rule 8 ($@3)
    $default  reduce using rule 6 ($@2)

    $@2  go to state 12
    $@3  go to state 13


State 11

    5 function: _FUNCDEC _ID $@1 • _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 14


State 12

    7 function: _VARDEC _ID _ASSIGN $@2 • arrow_parameters _ARROW body

    _ID      shift, and go to state 15
    _LPAREN  shift, and go to state 16

    arrow_parameters  go to state 17
    parameter         go to state 18


State 13

    9 function: _VARDEC _ID _ASSIGN $@3 • _FUNCDEC _LPAREN parameters _RPAREN body

    _FUNCDEC  shift, and go to state 19


State 14

    5 function: _FUNCDEC _ID $@1 _LPAREN • parameters _RPAREN body

    _ID  shift, and go to state 15

    $default  reduce using rule 10 (parameters)

    parameters      go to state 20
    parameter_list  go to state 21
    parameter       go to state 22


State 15

   17 parameter: _ID •

    $default  reduce using rule 17 (parameter)


State 16

   12 arrow_parameters: _LPAREN • _RPAREN
   14                 | _LPAREN • parameter_list _RPAREN

    _ID      shift, and go to state 15
    _RPAREN  shift, and go to state 23

    parameter_list  go to state 24
    parameter       go to state 22


State 17

    7 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters • _ARROW body

    _ARROW  shift, and go to state 25


State 18

   13 arrow_parameters: parameter •

    $default  reduce using rule 13 (arrow_parameters)


State 19

    9 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC • _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 26


State 20

    5 function: _FUNCDEC _ID $@1 _LPAREN parameters • _RPAREN body

    _RPAREN  shift, and go to state 27


State 21

   11 parameters: parameter_list •
   16 parameter_list: parameter_list • _COMMA parameter

    _COMMA  shift, and go to state 28

    $default  reduce using rule 11 (parameters)


State 22

   15 parameter_list: parameter •

    $default  reduce using rule 15 (parameter_list)


State 23

   12 arrow_parameters: _LPAREN _RPAREN •

    $default  reduce using rule 12 (arrow_parameters)


State 24

   14 arrow_parameters: _LPAREN parameter_list • _RPAREN
   16 parameter_list: parameter_list • _COMMA parameter

    _COMMA   shift, and go to state 28
    _RPAREN  shift, and go to state 29


State 25

    7 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters _ARROW • body

    _LBRACKET  shift, and go to state 30

    body  go to state 31


State 26

    9 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC _LPAREN • parameters _RPAREN body

    _ID  shift, and go to state 15

    $default  reduce using rule 10 (parameters)

    parameters      go to state 32
    parameter_list  go to state 21
    parameter       go to state 22


State 27

    5 function: _FUNCDEC _ID $@1 _LPAREN parameters _RPAREN • body

    _LBRACKET  shift, and go to state 30

    body  go to state 33


State 28

   16 parameter_list: parameter_list _COMMA • parameter

    _ID  shift, and go to state 15

    parameter  go to state 34


State 29

   14 arrow_parameters: _LPAREN parameter_list _RPAREN •

    $default  reduce using rule 14 (arrow_parameters)


State 30

   19 body: _LBRACKET • variable_list $@4 statement_list _RBRACKET

    $default  reduce using rule 20 (variable_list)

    variable_list  go to state 35


State 31

    7 function: _VARDEC _ID _ASSIGN $@2 arrow_parameters _ARROW body •

    $default  reduce using rule 7 (function)


State 32

    9 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters • _RPAREN body

    _RPAREN  shift, and go to state 36


State 33

    5 function: _FUNCDEC _ID $@1 _LPAREN parameters _RPAREN body •

    $default  reduce using rule 5 (function)


State 34

   16 parameter_list: parameter_list _COMMA parameter •

    $default  reduce using rule 16 (parameter_list)


State 35

   19 body: _LBRACKET variable_list • $@4 statement_list _RBRACKET
   21 variable_list: variable_list • variable

    _VARDEC  shift, and go to state 37

    $default  reduce using rule 18 ($@4)

    $@4       go to state 38
    variable  go to state 39


State 36

    9 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN • body

    _LBRACKET  shift, and go to state 30

    body  go to state 40


State 37

   22 variable: _VARDEC • _ID _SEMICOLON

    _ID  shift, and go to state 41


State 38

   19 body: _LBRACKET variable_list $@4 • statement_list _RBRACKET

    $default  reduce using rule 23 (statement_list)

    statement_list  go to state 42


State 39

   21 variable_list: variable_list variable •

    $default  reduce using rule 21 (variable_list)


State 40

    9 function: _VARDEC _ID _ASSIGN $@3 _FUNCDEC _LPAREN parameters _RPAREN body •

    $default  reduce using rule 9 (function)


State 41

   22 variable: _VARDEC _ID • _SEMICOLON

    _SEMICOLON  shift, and go to state 43


State 42

   19 body: _LBRACKET variable_list $@4 statement_list • _RBRACKET
   24 statement_list: statement_list • statement

    _IF        shift, and go to state 44
    _RETURN    shift, and go to state 45
    _ID        shift, and go to state 46
    _LBRACKET  shift, and go to state 47
    _RBRACKET  shift, and go to state 48

    statement             go to state 49
    compound_statement    go to state 50
    assignment_statement  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 43

   22 variable: _VARDEC _ID _SEMICOLON •

    $default  reduce using rule 22 (variable)


State 44

   49 if_part: _IF • _LPAREN @6 rel_exp $@7 _RPAREN statement

    _LPAREN  shift, and go to state 55


State 45

   51 return_statement: _RETURN • num_exp _SEMICOLON

    _ID      shift, and go to state 56
    _NUMBER  shift, and go to state 57
    _LPAREN  shift, and go to state 58

    num_exp        go to state 59
    exp            go to state 60
    literal        go to state 61
    function_call  go to state 62


State 46

   30 assignment_statement: _ID • _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 63


State 47

   29 compound_statement: _LBRACKET • statement_list _RBRACKET

    $default  reduce using rule 23 (statement_list)

    statement_list  go to state 64


State 48

   19 body: _LBRACKET variable_list $@4 statement_list _RBRACKET •

    $default  reduce using rule 19 (body)


State 49

   24 statement_list: statement_list statement •

    $default  reduce using rule 24 (statement_list)


State 50

   25 statement: compound_statement •

    $default  reduce using rule 25 (statement)


State 51

   26 statement: assignment_statement •

    $default  reduce using rule 26 (statement)


State 52

   27 statement: if_statement •

    $default  reduce using rule 27 (statement)


State 53

   45 if_statement: if_part •
   46             | if_part • _ELSE statement

    _ELSE  shift, and go to state 65

    $default  reduce using rule 45 (if_statement)


State 54

   28 statement: return_statement •

    $default  reduce using rule 28 (statement)


State 55

   49 if_part: _IF _LPAREN • @6 rel_exp $@7 _RPAREN statement

    $default  reduce using rule 47 (@6)

    @6  go to state 66


State 56

   34 exp: _ID •
   39 function_call: _ID • $@5 _LPAREN arguments _RPAREN

    _LPAREN   reduce using rule 38 ($@5)
    $default  reduce using rule 34 (exp)

    $@5  go to state 67


State 57

   37 literal: _NUMBER •

    $default  reduce using rule 37 (literal)


State 58

   36 exp: _LPAREN • num_exp _RPAREN

    _ID      shift, and go to state 56
    _NUMBER  shift, and go to state 57
    _LPAREN  shift, and go to state 58

    num_exp        go to state 68
    exp            go to state 60
    literal        go to state 61
    function_call  go to state 62


State 59

   32 num_exp: num_exp • _AROP exp
   51 return_statement: _RETURN num_exp • _SEMICOLON

    _SEMICOLON  shift, and go to state 69
    _AROP       shift, and go to state 70


State 60

   31 num_exp: exp •

    $default  reduce using rule 31 (num_exp)


State 61

   33 exp: literal •

    $default  reduce using rule 33 (exp)


State 62

   35 exp: function_call •

    $default  reduce using rule 35 (exp)


State 63

   30 assignment_statement: _ID _ASSIGN • num_exp _SEMICOLON

    _ID      shift, and go to state 56
    _NUMBER  shift, and go to state 57
    _LPAREN  shift, and go to state 58

    num_exp        go to state 71
    exp            go to state 60
    literal        go to state 61
    function_call  go to state 62


State 64

   24 statement_list: statement_list • statement
   29 compound_statement: _LBRACKET statement_list • _RBRACKET

    _IF        shift, and go to state 44
    _RETURN    shift, and go to state 45
    _ID        shift, and go to state 46
    _LBRACKET  shift, and go to state 47
    _RBRACKET  shift, and go to state 72

    statement             go to state 49
    compound_statement    go to state 50
    assignment_statement  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 65

   46 if_statement: if_part _ELSE • statement

    _IF        shift, and go to state 44
    _RETURN    shift, and go to state 45
    _ID        shift, and go to state 46
    _LBRACKET  shift, and go to state 47

    statement             go to state 73
    compound_statement    go to state 50
    assignment_statement  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 66

   49 if_part: _IF _LPAREN @6 • rel_exp $@7 _RPAREN statement

    _ID      shift, and go to state 56
    _NUMBER  shift, and go to state 57
    _LPAREN  shift, and go to state 58

    num_exp        go to state 74
    exp            go to state 60
    literal        go to state 61
    function_call  go to state 62
    rel_exp        go to state 75


State 67

   39 function_call: _ID $@5 • _LPAREN arguments _RPAREN

    _LPAREN  shift, and go to state 76


State 68

   32 num_exp: num_exp • _AROP exp
   36 exp: _LPAREN num_exp • _RPAREN

    _RPAREN  shift, and go to state 77
    _AROP    shift, and go to state 70


State 69

   51 return_statement: _RETURN num_exp _SEMICOLON •

    $default  reduce using rule 51 (return_statement)


State 70

   32 num_exp: num_exp _AROP • exp

    _ID      shift, and go to state 56
    _NUMBER  shift, and go to state 57
    _LPAREN  shift, and go to state 58

    exp            go to state 78
    literal        go to state 61
    function_call  go to state 62


State 71

   30 assignment_statement: _ID _ASSIGN num_exp • _SEMICOLON
   32 num_exp: num_exp • _AROP exp

    _SEMICOLON  shift, and go to state 79
    _AROP       shift, and go to state 70


State 72

   29 compound_statement: _LBRACKET statement_list _RBRACKET •

    $default  reduce using rule 29 (compound_statement)


State 73

   46 if_statement: if_part _ELSE statement •

    $default  reduce using rule 46 (if_statement)


State 74

   32 num_exp: num_exp • _AROP exp
   50 rel_exp: num_exp • _RELOP num_exp

    _AROP   shift, and go to state 70
    _RELOP  shift, and go to state 80


State 75

   49 if_part: _IF _LPAREN @6 rel_exp • $@7 _RPAREN statement

    $default  reduce using rule 48 ($@7)

    $@7  go to state 81


State 76

   39 function_call: _ID $@5 _LPAREN • arguments _RPAREN

    _ID      shift, and go to state 56
    _NUMBER  shift, and go to state 57
    _LPAREN  shift, and go to state 58

    $default  reduce using rule 40 (arguments)

    num_exp        go to state 82
    exp            go to state 60
    literal        go to state 61
    function_call  go to state 62
    arguments      go to state 83
    argument_list  go to state 84
    argument       go to state 85


State 77

   36 exp: _LPAREN num_exp _RPAREN •

    $default  reduce using rule 36 (exp)


State 78

   32 num_exp: num_exp _AROP exp •

    $default  reduce using rule 32 (num_exp)


State 79

   30 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON •

    $default  reduce using rule 30 (assignment_statement)


State 80

   50 rel_exp: num_exp _RELOP • num_exp

    _ID      shift, and go to state 56
    _NUMBER  shift, and go to state 57
    _LPAREN  shift, and go to state 58

    num_exp        go to state 86
    exp            go to state 60
    literal        go to state 61
    function_call  go to state 62


State 81

   49 if_part: _IF _LPAREN @6 rel_exp $@7 • _RPAREN statement

    _RPAREN  shift, and go to state 87


State 82

   32 num_exp: num_exp • _AROP exp
   44 argument: num_exp •

    _AROP  shift, and go to state 70

    $default  reduce using rule 44 (argument)


State 83

   39 function_call: _ID $@5 _LPAREN arguments • _RPAREN

    _RPAREN  shift, and go to state 88


State 84

   41 arguments: argument_list •
   43 argument_list: argument_list • _COMMA argument

    _COMMA  shift, and go to state 89

    $default  reduce using rule 41 (arguments)


State 85

   42 argument_list: argument •

    $default  reduce using rule 42 (argument_list)


State 86

   32 num_exp: num_exp • _AROP exp
   50 rel_exp: num_exp _RELOP num_exp •

    _AROP  shift, and go to state 70

    $default  reduce using rule 50 (rel_exp)


State 87

   49 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN • statement

    _IF        shift, and go to state 44
    _RETURN    shift, and go to state 45
    _ID        shift, and go to state 46
    _LBRACKET  shift, and go to state 47

    statement             go to state 90
    compound_statement    go to state 50
    assignment_statement  go to state 51
    if_statement          go to state 52
    if_part               go to state 53
    return_statement      go to state 54


State 88

   39 function_call: _ID $@5 _LPAREN arguments _RPAREN •

    $default  reduce using rule 39 (function_call)


State 89

   43 argument_list: argument_list _COMMA • argument

    _ID      shift, and go to state 56
    _NUMBER  shift, and go to state 57
    _LPAREN  shift, and go to state 58

    num_exp        go to state 82
    exp            go to state 60
    literal        go to state 61
    function_call  go to state 62
    argument       go to state 91


State 90

   49 if_part: _IF _LPAREN @6 rel_exp $@7 _RPAREN statement •

    $default  reduce using rule 49 (if_part)


State 91

   43 argument_list: argument_list _COMMA argument •

    $default  reduce using rule 43 (argument_list)
