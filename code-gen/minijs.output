Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: ε

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    6 parameter: ε
    7          | _TYPE _ID

    8 $@2: ε

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   10 variable_list: ε
   11              | variable_list variable

   12 variable: _TYPE _ID _SEMICOLON

   13 statement_list: ε
   14               | statement_list statement

   15 statement: compound_statement
   16          | assignment_statement
   17          | if_statement
   18          | return_statement

   19 compound_statement: _LBRACKET statement_list _RBRACKET

   20 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   21 num_exp: exp
   22        | num_exp _AROP exp

   23 exp: literal
   24    | _ID
   25    | function_call
   26    | _LPAREN num_exp _RPAREN

   27 literal: _INT_NUMBER
   28        | _UINT_NUMBER

   29 $@3: ε

   30 function_call: _ID $@3 _LPAREN argument _RPAREN

   31 argument: ε
   32         | num_exp

   33 if_statement: if_part
   34             | if_part _ELSE statement

   35 @4: ε

   36 $@5: ε

   37 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement

   38 rel_exp: num_exp _RELOP num_exp

   39 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 7 12
    _IF (259) 37
    _ELSE (260) 34
    _RETURN (261) 39
    _ID <s> (262) 5 7 12 20 24 30
    _INT_NUMBER <s> (263) 27
    _UINT_NUMBER <s> (264) 28
    _LPAREN (265) 5 26 30 37
    _RPAREN (266) 5 26 30 37
    _LBRACKET (267) 9 19
    _RBRACKET (268) 9 19
    _ASSIGN (269) 20
    _SEMICOLON (270) 12 20 39
    _AROP <i> (271) 22
    _RELOP <i> (272) 38
    ONLY_IF (273)


Nonterminals, with rules where they appear

    $accept (19)
        on left: 0
    program (20)
        on left: 1
        on right: 0
    function_list (21)
        on left: 2 3
        on right: 1 3
    function (22)
        on left: 5
        on right: 2 3
    $@1 (23)
        on left: 4
        on right: 5
    parameter (24)
        on left: 6 7
        on right: 5
    body (25)
        on left: 9
        on right: 5
    $@2 (26)
        on left: 8
        on right: 9
    variable_list (27)
        on left: 10 11
        on right: 9 11
    variable (28)
        on left: 12
        on right: 11
    statement_list (29)
        on left: 13 14
        on right: 9 14 19
    statement (30)
        on left: 15 16 17 18
        on right: 14 34 37
    compound_statement (31)
        on left: 19
        on right: 15
    assignment_statement (32)
        on left: 20
        on right: 16
    num_exp <i> (33)
        on left: 21 22
        on right: 20 22 26 32 38 39
    exp <i> (34)
        on left: 23 24 25 26
        on right: 21 22
    literal <i> (35)
        on left: 27 28
        on right: 23
    function_call <i> (36)
        on left: 30
        on right: 25
    $@3 (37)
        on left: 29
        on right: 30
    argument <i> (38)
        on left: 31 32
        on right: 30
    if_statement (39)
        on left: 33 34
        on right: 17
    if_part <i> (40)
        on left: 37
        on right: 33 34
    @4 (41)
        on left: 35
        on right: 37
    $@5 (42)
        on left: 36
        on right: 37
    rel_exp <i> (43)
        on left: 38
        on right: 37
    return_statement (44)
        on left: 39
        on right: 18


State 0

    0 $accept: • program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE • _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: function_list •
    3 function_list: function_list • function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function •

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID • $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end •

    $default  accept


State 7

    3 function_list: function_list function •

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 • _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN • parameter _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameter)

    parameter  go to state 11


State 10

    7 parameter: _TYPE • _ID

    _ID  shift, and go to state 12


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameter • _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: _TYPE _ID •

    $default  reduce using rule 7 (parameter)


State 13

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN • body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    9 body: _LBRACKET • variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 10 (variable_list)

    variable_list  go to state 16


State 15

    5 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body •

    $default  reduce using rule 5 (function)


State 16

    9 body: _LBRACKET variable_list • $@2 statement_list _RBRACKET
   11 variable_list: variable_list • variable

    _TYPE  shift, and go to state 17

    $default  reduce using rule 8 ($@2)

    $@2       go to state 18
    variable  go to state 19


State 17

   12 variable: _TYPE • _ID _SEMICOLON

    _ID  shift, and go to state 20


State 18

    9 body: _LBRACKET variable_list $@2 • statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 21


State 19

   11 variable_list: variable_list variable •

    $default  reduce using rule 11 (variable_list)


State 20

   12 variable: _TYPE _ID • _SEMICOLON

    _SEMICOLON  shift, and go to state 22


State 21

    9 body: _LBRACKET variable_list $@2 statement_list • _RBRACKET
   14 statement_list: statement_list • statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 27

    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 22

   12 variable: _TYPE _ID _SEMICOLON •

    $default  reduce using rule 12 (variable)


State 23

   37 if_part: _IF • _LPAREN @4 rel_exp $@5 _RPAREN statement

    _LPAREN  shift, and go to state 34


State 24

   39 return_statement: _RETURN • num_exp _SEMICOLON

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 39
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 25

   20 assignment_statement: _ID • _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 43


State 26

   19 compound_statement: _LBRACKET • statement_list _RBRACKET

    $default  reduce using rule 13 (statement_list)

    statement_list  go to state 44


State 27

    9 body: _LBRACKET variable_list $@2 statement_list _RBRACKET •

    $default  reduce using rule 9 (body)


State 28

   14 statement_list: statement_list statement •

    $default  reduce using rule 14 (statement_list)


State 29

   15 statement: compound_statement •

    $default  reduce using rule 15 (statement)


State 30

   16 statement: assignment_statement •

    $default  reduce using rule 16 (statement)


State 31

   17 statement: if_statement •

    $default  reduce using rule 17 (statement)


State 32

   33 if_statement: if_part •
   34             | if_part • _ELSE statement

    _ELSE  shift, and go to state 45

    $default  reduce using rule 33 (if_statement)


State 33

   18 statement: return_statement •

    $default  reduce using rule 18 (statement)


State 34

   37 if_part: _IF _LPAREN • @4 rel_exp $@5 _RPAREN statement

    $default  reduce using rule 35 (@4)

    @4  go to state 46


State 35

   24 exp: _ID •
   30 function_call: _ID • $@3 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 29 ($@3)
    $default  reduce using rule 24 (exp)

    $@3  go to state 47


State 36

   27 literal: _INT_NUMBER •

    $default  reduce using rule 27 (literal)


State 37

   28 literal: _UINT_NUMBER •

    $default  reduce using rule 28 (literal)


State 38

   26 exp: _LPAREN • num_exp _RPAREN

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 48
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 39

   22 num_exp: num_exp • _AROP exp
   39 return_statement: _RETURN num_exp • _SEMICOLON

    _SEMICOLON  shift, and go to state 49
    _AROP       shift, and go to state 50


State 40

   21 num_exp: exp •

    $default  reduce using rule 21 (num_exp)


State 41

   23 exp: literal •

    $default  reduce using rule 23 (exp)


State 42

   25 exp: function_call •

    $default  reduce using rule 25 (exp)


State 43

   20 assignment_statement: _ID _ASSIGN • num_exp _SEMICOLON

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 51
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 44

   14 statement_list: statement_list • statement
   19 compound_statement: _LBRACKET statement_list • _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 52

    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 45

   34 if_statement: if_part _ELSE • statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 53
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 46

   37 if_part: _IF _LPAREN @4 • rel_exp $@5 _RPAREN statement

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 54
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42
    rel_exp        go to state 55


State 47

   30 function_call: _ID $@3 • _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 56


State 48

   22 num_exp: num_exp • _AROP exp
   26 exp: _LPAREN num_exp • _RPAREN

    _RPAREN  shift, and go to state 57
    _AROP    shift, and go to state 50


State 49

   39 return_statement: _RETURN num_exp _SEMICOLON •

    $default  reduce using rule 39 (return_statement)


State 50

   22 num_exp: num_exp _AROP • exp

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    exp            go to state 58
    literal        go to state 41
    function_call  go to state 42


State 51

   20 assignment_statement: _ID _ASSIGN num_exp • _SEMICOLON
   22 num_exp: num_exp • _AROP exp

    _SEMICOLON  shift, and go to state 59
    _AROP       shift, and go to state 50


State 52

   19 compound_statement: _LBRACKET statement_list _RBRACKET •

    $default  reduce using rule 19 (compound_statement)


State 53

   34 if_statement: if_part _ELSE statement •

    $default  reduce using rule 34 (if_statement)


State 54

   22 num_exp: num_exp • _AROP exp
   38 rel_exp: num_exp • _RELOP num_exp

    _AROP   shift, and go to state 50
    _RELOP  shift, and go to state 60


State 55

   37 if_part: _IF _LPAREN @4 rel_exp • $@5 _RPAREN statement

    $default  reduce using rule 36 ($@5)

    $@5  go to state 61


State 56

   30 function_call: _ID $@3 _LPAREN • argument _RPAREN

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    $default  reduce using rule 31 (argument)

    num_exp        go to state 62
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42
    argument       go to state 63


State 57

   26 exp: _LPAREN num_exp _RPAREN •

    $default  reduce using rule 26 (exp)


State 58

   22 num_exp: num_exp _AROP exp •

    $default  reduce using rule 22 (num_exp)


State 59

   20 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON •

    $default  reduce using rule 20 (assignment_statement)


State 60

   38 rel_exp: num_exp _RELOP • num_exp

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 64
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 61

   37 if_part: _IF _LPAREN @4 rel_exp $@5 • _RPAREN statement

    _RPAREN  shift, and go to state 65


State 62

   22 num_exp: num_exp • _AROP exp
   32 argument: num_exp •

    _AROP  shift, and go to state 50

    $default  reduce using rule 32 (argument)


State 63

   30 function_call: _ID $@3 _LPAREN argument • _RPAREN

    _RPAREN  shift, and go to state 66


State 64

   22 num_exp: num_exp • _AROP exp
   38 rel_exp: num_exp _RELOP num_exp •

    _AROP  shift, and go to state 50

    $default  reduce using rule 38 (rel_exp)


State 65

   37 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN • statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 67
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 66

   30 function_call: _ID $@3 _LPAREN argument _RPAREN •

    $default  reduce using rule 30 (function_call)


State 67

   37 if_part: _IF _LPAREN @4 rel_exp $@5 _RPAREN statement •

    $default  reduce using rule 37 (if_part)
